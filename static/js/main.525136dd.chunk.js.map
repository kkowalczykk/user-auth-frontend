{"version":3,"sources":["context/UserContext.js","Home.js","auth/Register.js","auth/Login.js","auth/AuthOptions.js","layout/Header.js","App.js","index.js"],"names":["createContext","Wrapper","styled","div","TodoBox","PostButton","button","NewTodoBox","rotate","keyframes","Loader","DoneButton","Home","userData","useContext","UserContext","history","useHistory","useState","todos","setTodos","newTodo","setNewTodo","useEffect","user","setTimeout","loadTodos","push","a","Axios","get","headers","token","todosResponse","data","console","log","postTodo","post","deleteTodo","todo","delete","_id","style","color","displayName","value","onChange","e","target","onClick","map","id","key","title","Title","h2","Form","form","Submit","Error","Register","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","setDisplayName","setUserData","error","setError","submit","preventDefault","newUser","loginResponse","localStorage","setItem","response","msg","htmlFor","type","className","undefined","Login","Button","AuthOptions","StyledLink","Link","StyledH","h1","Header","to","App","getItem","userResponse","checkLoggedIn","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.525136dd.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport default createContext(null);","import Axios from 'axios';\r\nimport React, { useEffect, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from './context/UserContext';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n`\r\n\r\nconst TodoBox = styled.div`\r\n      width: 90%;\r\n      margin: 10px 0;\r\n      height: 60px;\r\n      background-color: rgb(245, 251, 255);\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      @media screen and (min-width: 768px){\r\n            width: 60%;\r\n      }\r\n\r\n      p{\r\n            margin: 5px 10px;\r\n            margin: 10px 0;\r\n            height: 60px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n      }\r\n`\r\n\r\nconst PostButton = styled.button`\r\n      box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\twidth: 80px;\r\n      padding: 5px;\r\n\tbackground: #43D1AF;\r\n\tborder-bottom: 2px solid #30C29E;\r\n\tborder-top-style: none;\r\n\tborder-right-style: none;\r\n\tborder-left-style: none;\t\r\n      color: #fff;\r\n      transition: ease-in-out 0.2s;\r\n      cursor: pointer;\r\n      &:hover{\r\n            background: #2EBC99;\r\n      }\r\n`\r\n\r\nconst NewTodoBox = styled.div`\r\n      width: 90%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      input{\r\n            outline: none;\r\n            box-sizing: border-box;\r\n            -webkit-box-sizing: border-box;\r\n            -moz-box-sizing: border-box;\r\n            width: calc(90% - 80px);\r\n            height: 100%;\r\n            background: #fff;\r\n            border: 1px solid #ccc;\r\n            padding: 5px;\r\n            color: #555; \r\n      }\r\n\r\n      input:focus{\r\n            box-shadow: 0 0 5px #4196f2;\r\n\t      border: 1px solid #4196f2;\r\n      }\r\n`\r\n\r\nconst rotate = keyframes`\r\n      from {\r\n            transform: rotate(0deg);\r\n      }\r\n      to{\r\n            transform: rotate(360deg);\r\n      }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n      width: 50px;\r\n      height: 50px;\r\n      border: 2px solid blue;\r\n      border-radius: 50%;\r\n      position: relative;\r\n      animation: ${rotate} 1.5s linear infinite;\r\n      &::after{\r\n            width: 25px;\r\n            height: 25px;\r\n            background-color: white;\r\n            content: '';\r\n            position: absolute;\r\n            left: 0;\r\n            bottom: 0;\r\n      }\r\n      \r\n`\r\n\r\nconst DoneButton = styled.button`\r\n      width: 50px;\r\n      height: 25px;\r\n      background-color: rgb(45, 82, 207);\r\n      margin-right: 10px;\r\n      color: white;\r\n      border: none;\r\n      transition: 0.3s ease-in-out;\r\n      cursor: pointer;\r\n      &:hover{\r\n            background-color: rgb(19, 50, 156);\r\n      }\r\n`\r\n\r\nconst Home = () => {\r\n\r\n      const { userData } = useContext(UserContext);\r\n      const history = useHistory();\r\n      const [todos, setTodos] = useState('loading');\r\n      const [newTodo, setNewTodo] = useState('');\r\n\r\n      useEffect(() => {\r\n            if (!userData.user) history.push('/login');\r\n            else {\r\n                  setTimeout(() => loadTodos(), 800);\r\n\r\n            }\r\n      }, [userData]);\r\n\r\n      const loadTodos = async () => {\r\n            try {\r\n                  const todosResponse = await Axios.get('http://localhost:5000/todos/all', {\r\n                        headers: {\r\n                              \"x-auth-token\": userData.token\r\n                        }\r\n                  });\r\n                  setTodos(todosResponse.data);\r\n\r\n            } catch (err) {\r\n                  console.log(err);\r\n            }\r\n      }\r\n\r\n      const postTodo = async () => {\r\n            try {\r\n                  const todosResponse = await Axios.post('http://localhost:5000/todos/', { \"title\": newTodo }, {\r\n                        headers: {\r\n                              \"x-auth-token\": userData.token\r\n                        }\r\n                  });\r\n                  loadTodos();\r\n\r\n            } catch (err) {\r\n                  console.log(err);\r\n            }\r\n      }\r\n\r\n      const deleteTodo = async (todo) => {\r\n            try {\r\n                  const todosResponse = await Axios.delete(`http://localhost:5000/todos/${todo._id}`, {\r\n                        headers: {\r\n                              \"x-auth-token\": userData.token\r\n                        }\r\n                  });\r\n                  loadTodos();\r\n\r\n            } catch (err) {\r\n                  console.log(err);\r\n            }\r\n      }\r\n\r\n\r\n\r\n      return (\r\n            <Wrapper>\r\n                  {userData.user ? <h1>Welcome <span style={{ color: 'blue' }}>{userData.user.displayName}</span></h1> : null}\r\n                  {userData.user ? <NewTodoBox><input value={newTodo} onChange={e => setNewTodo(e.target.value)}></input><PostButton onClick={postTodo}> Add Todo</PostButton></NewTodoBox> : null}\r\n                  {todos === 'loading' ? <Loader></Loader> :\r\n                        todos.map((todo, id) =>\r\n                              <TodoBox key={id}>\r\n                                    <p>{todo.title}</p>\r\n                                    <DoneButton onClick={() => deleteTodo(todo)}>Done</DoneButton>\r\n                              </TodoBox>\r\n                        )\r\n                  }\r\n            </Wrapper>\r\n      );\r\n}\r\n\r\nexport default Home;","import React, { useState, useContext } from 'react';\r\nimport UserContext from '../context/UserContext';\r\nimport styled from 'styled-components';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n      padding-top: 50px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n`\r\nconst Title = styled.h2`\r\n      width: 80vw;\r\n      max-width: 400px;\r\n      text-align: center;\r\n      padding: 0 16px;\r\n      margin: 0 ;\r\n`\r\nconst Form = styled.form`\r\n      width: 80vw;\r\n      max-width: 400px;\r\n\tmargin: 0px auto;\r\n\tpadding: 16px;\r\n      background: #F7F7F7;\r\n      \r\n      input{\r\n            outline: none;\r\n            box-sizing: border-box;\r\n            -webkit-box-sizing: border-box;\r\n            -moz-box-sizing: border-box;\r\n            width: 100%;\r\n            background: #fff;\r\n            margin-bottom: 4%;\r\n            border: 1px solid #ccc;\r\n            padding: 3%;\r\n            color: #555; \r\n      }\r\n\r\n      input:focus{\r\n            box-shadow: 0 0 5px #4196f2;\r\n\t      padding: 3%;\r\n\t      border: 1px solid #4196f2;\r\n      }\r\n`\r\n\r\nconst Submit = styled.button`\r\n      box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\twidth: 100%;\r\n\tpadding: 3%;\r\n\tbackground: #43D1AF;\r\n\tborder-bottom: 2px solid #30C29E;\r\n\tborder-top-style: none;\r\n\tborder-right-style: none;\r\n\tborder-left-style: none;\t\r\n      color: #fff;\r\n      transition: ease-in-out 0.2s;\r\n      cursor: pointer;\r\n      &:hover{\r\n            background: #2EBC99;\r\n      }\r\n`\r\nconst Error = styled.div`\r\n      color: tomato;\r\n      width: 100%;\r\n      padding: 3%;\r\n      text-align: center;\r\n      \r\n      .clearError{\r\n            margin-left: 10px;\r\n            background: none;\r\n            color: tomato;\r\n            cursor: pointer;\r\n            border: 1px solid black;\r\n            border-radius: 3px;\r\n      }\r\n`\r\n\r\nconst Register = () => {\r\n      const [email, setEmail] = useState();\r\n      const [password, setPassword] = useState();\r\n      const [passwordCheck, setPasswordCheck] = useState();\r\n      const [displayName, setDisplayName] = useState();\r\n      const history = useHistory();\r\n      const { setUserData } = useContext(UserContext);\r\n      const [error, setError] = useState();\r\n\r\n      const submit = async (e) => {\r\n            e.preventDefault();\r\n\r\n            try {\r\n                  const newUser = { email, password, passwordCheck, displayName };\r\n                  const registerResponse = await Axios.post(\r\n                        'http://localhost:5000/users/register',\r\n                        newUser\r\n                  );\r\n                  const loginResponse = await Axios.post('http://localhost:5000/users/login', {\r\n                        email,\r\n                        password,\r\n                  });\r\n                  setUserData({\r\n                        token: loginResponse.data.token,\r\n                        user: loginResponse.data.user,\r\n                  });\r\n                  localStorage.setItem(\"auth-token\", loginResponse.data.token);\r\n                  history.push(\"/\");\r\n            } catch (err) {\r\n                  err.response.data.msg && setError(err.response.data.msg);\r\n            }\r\n      }\r\n      return (\r\n            <Wrapper>\r\n                  <Title>Register</Title>\r\n\r\n                  <Form>\r\n                        <label htmlFor=\"register-email\">Email</label>\r\n                        <input id=\"register-email\" type=\"text\" onChange={(e) => setEmail(e.target.value)} />\r\n\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input id=\"password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n\r\n                        <label htmlFor=\"verifyPassword\">Verify Password</label>\r\n                        <input id=\"verifyPassword\" type=\"password\" onChange={(e) => setPasswordCheck(e.target.value)} />\r\n\r\n                        <label htmlFor=\"displayName\">Display Name</label>\r\n                        <input id=\"displayName\" type=\"text\" onChange={(e) => setDisplayName(e.target.value)} />\r\n                        {error && <Error>{error} <button className=\"clearError\" onClick={() => setError(undefined)}>X</button></Error>}\r\n                        <Submit type=\"submit\" onClick={submit}>Register</Submit>\r\n                  </Form>\r\n            </Wrapper>\r\n      );\r\n}\r\n\r\nexport default Register;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\nimport Axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n      padding-top: 50px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n`\r\nconst Title = styled.h2`\r\n      width: 80vw;\r\n      max-width: 400px;\r\n      text-align: center;\r\n      padding: 0 16px;\r\n      margin: 0 ;\r\n`\r\nconst Form = styled.form`\r\n      width: 80vw;\r\n      max-width: 400px;\r\n\tmargin: 0px auto;\r\n\tpadding: 16px;\r\n      background: #F7F7F7;\r\n      \r\n      input{\r\n            outline: none;\r\n            box-sizing: border-box;\r\n            -webkit-box-sizing: border-box;\r\n            -moz-box-sizing: border-box;\r\n            width: 100%;\r\n            background: #fff;\r\n            margin-bottom: 4%;\r\n            border: 1px solid #ccc;\r\n            padding: 3%;\r\n            color: #555; \r\n      }\r\n\r\n      input:focus{\r\n            box-shadow: 0 0 5px #4196f2;\r\n\t      padding: 3%;\r\n\t      border: 1px solid #4196f2;\r\n      }\r\n`\r\nconst Submit = styled.button`\r\n      box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\twidth: 100%;\r\n\tpadding: 3%;\r\n\tbackground: #43D1AF;\r\n\tborder-bottom: 2px solid #30C29E;\r\n\tborder-top-style: none;\r\n\tborder-right-style: none;\r\n\tborder-left-style: none;\t\r\n      color: #fff;\r\n      transition: ease-in-out 0.2s;\r\n      cursor: pointer;\r\n      &:hover{\r\n            background: #2EBC99;\r\n      }\r\n`\r\nconst Error = styled.div`\r\n      color: tomato;\r\n      width: 100%;\r\n      padding: 3%;\r\n      text-align: center;\r\n      \r\n      .clearError{\r\n            margin-left: 10px;\r\n            width: 20px;\r\n            height: 20px;\r\n            background: tomato;\r\n            color: white;\r\n            cursor: pointer;\r\n            border: none;\r\n            border-radius: 50%;\r\n      }\r\n`\r\n\r\nconst Login = () => {\r\n      const [email, setEmail] = useState();\r\n      const [password, setPassword] = useState();\r\n      const history = useHistory();\r\n      const { userData, setUserData } = useContext(UserContext);\r\n      const [error, setError] = useState();\r\n\r\n      useEffect(() => {\r\n            if (userData.user) history.push('/');\r\n      }, [userData]);\r\n\r\n      const submit = async (e) => {\r\n            e.preventDefault();\r\n\r\n            try {\r\n                  const loginResponse = await Axios.post('http://localhost:5000/users/login', {\r\n                        email,\r\n                        password,\r\n                  });\r\n                  setUserData({\r\n                        token: loginResponse.data.token,\r\n                        user: loginResponse.data.user,\r\n                  });\r\n                  localStorage.setItem(\"auth-token\", loginResponse.data.token);\r\n                  history.push(\"/\");\r\n            } catch (err) {\r\n                  err.response.data.msg && setError(err.response.data.msg);\r\n            }\r\n      }\r\n\r\n      return (\r\n            <Wrapper>\r\n                  <Title>Log in</Title>\r\n                  <Form>\r\n                        <label htmlFor=\"login-email\">Email</label>\r\n                        <input id=\"login-email\" type=\"text\" onChange={(e) => setEmail(e.target.value)} />\r\n\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input id=\"password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                        {error && <Error>{error} <button className=\"clearError\" onClick={() => setError(undefined)}>X</button></Error>}\r\n                        <Submit onClick={submit}>Log in</Submit>\r\n                  </Form>\r\n            </Wrapper>\r\n      );\r\n}\r\n\r\nexport default Login;","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserContext from '../context/UserContext';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n      display: flex;\r\n`\r\nconst Button = styled.button`\r\n      background-color: rgb(45, 82, 207);\r\n      color: white;\r\n      width: 100px;\r\n      height: 40px;\r\n      border: none;\r\n      margin-right: 10px;\r\n      transition: 0.3s ease-in-out;\r\n      cursor: pointer;\r\n      &:hover{\r\n            background-color: rgb(19, 50, 156);\r\n      }\r\n\r\n      &:focus{\r\n            outline: none;\r\n      }\r\n\r\n      @media screen and (max-width: 820px) {\r\n            width: 70px;\r\n            height: 30px;\r\n      }\r\n`\r\n\r\n\r\nconst AuthOptions = () => {\r\n\r\n      const { userData, setUserData } = useContext(UserContext);\r\n\r\n      const history = useHistory();\r\n\r\n      const register = () => history.push('/register');\r\n      const login = () => history.push('/login');\r\n      const logout = () => {\r\n            setUserData({\r\n                  token: undefined,\r\n                  user: undefined,\r\n            });\r\n            localStorage.setItem(\"auth-token\", '');\r\n      }\r\n\r\n      return (\r\n            <Wrapper>\r\n                  {userData.user ?\r\n                        <Button onClick={logout}> Log out</Button> :\r\n                        <>\r\n                              <Button onClick={login}>Log in</Button>\r\n                              <Button onClick={register}>Register</Button>\r\n                        </>\r\n                  }\r\n            </Wrapper>\r\n      );\r\n}\r\n\r\nexport default AuthOptions;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport AuthOptions from '../auth/AuthOptions';\r\n\r\nconst Wrapper = styled.div`\r\n      display: flex;\r\n      height: 70px;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      background-color: rgb(68, 150, 227);\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n      text-decoration: none;\r\n`\r\n\r\nconst StyledH = styled.h1`\r\n      font-size: 1.2em;\r\n      color: white;\r\n      margin:0 10px;\r\n`\r\n\r\nconst Header = () => {\r\n      return (\r\n            <Wrapper>\r\n                  <StyledLink to=\"/\"><StyledH>User authentication system</StyledH></StyledLink>\r\n                  <AuthOptions></AuthOptions>\r\n            </Wrapper>\r\n      );\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport Register from './auth/Register';\nimport Login from './auth/Login';\nimport Header from './layout/Header';\nimport UserContext from './context/UserContext';\n\nimport './App.css';\nimport Axios from 'axios';\n\nfunction App() {\n\n  const [userData, setUserData] = useState({\n    token: '',\n    user: '',\n  });\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenResponse = await Axios.post('http://localhost:5000/users/tokenIsValid', null,\n        { headers: { \"x-auth-token\": token } });\n\n      if (tokenResponse.data) {\n        const userResponse = await Axios.get(\"http://localhost:5000/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userResponse.data,\n        })\n      }\n    };\n\n    checkLoggedIn();\n  }, [])\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <Header></Header>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/login' component={Login} />\n        </Switch>\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}